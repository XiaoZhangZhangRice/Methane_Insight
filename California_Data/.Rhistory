plot = combined,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 24, width = 9, units = "cm")
ggsave(filename = "all_plotted.jpg",  # Include the file extension here
plot = combined,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 36, width = 13.5, units = "cm")
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
master <- read_excel("RES _LCMS_GC.xlsx", sheet=1)
master$Sensor <- as.factor(master$Sensor)
fan_off <- master %>%
select(-LCMS_ppm_hr_fan_on, -LCMS_ppm_hr_3point)  %>%
na.omit()
fan_on <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_3point)  %>%
na.omit()
three_point <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_fan_on)  %>%
na.omit()
str(master)
summary(lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)) #coefficents are the same, y=mx+c and r2
fan_on_lm <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off_lm <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off_lm
summary(lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)) #coefficents are the same, y=mx+c and r2
fan_off_lm
as.data.frame(fan_off_lm)
fan_off_lm[1,1]
fan_off_lm
fan_off_lm$coefficients
fan_off_lm$coefficients[1,1]
fan_off_lm$coefficients[]
fan_off_lm$coefficients[1,]
fan_off_lm$coefficients[1,1]
fan_off_lm$coefficients[1:1]
fan_off_lm$coefficients[1:2]
fan_off_lm$coefficients[2:1]
fan_off_lm$coefficients[1:1]
1*fan_off_lm$coefficients[1:1]
2*fan_off_lm$coefficients[1:1]
fan_off_lm$coefficients[2:1]
fan_off_lm$coefficients[1:2]
fan_off_lm$coefficients[1:1]
fan_off_lm$coefficients["points", "Pr(>|t|)"]
predict
fan_off <- fan_off %>%
mutate(LCMS_ppm_hr_fan_off_transformed = predict(LCMS_ppm_hr, fan_off_lm))
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
master <- read_excel("RES _LCMS_GC.xlsx", sheet=1)
master$Sensor <- as.factor(master$Sensor)
fan_off <- master %>%
select(-LCMS_ppm_hr_fan_on, -LCMS_ppm_hr_3point)  %>%
na.omit()
fan_on <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_3point)  %>%
na.omit()
three_point <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_fan_on)  %>%
na.omit()
str(master)
View(fan_off)
View(fan_on)
View(master)
View(three_point)
lm_fan_off <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off_predicted_ppm <- predict(lm_fan_off, fan_off)
View(lm_fan_off)
View(lm_fan_off)
fan_off$fan_off_predicted_ppm <- predict(lm_fan_off, fan_off)
fan_off
ggplot(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(a) Fan off predicted")
lm_three_point <- lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)
lm_three_point
three_point$three_point_predicted_ppm <- predict(lm_three_point, three_point)
all_plotted_three_point_predicted <-
ggplot(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan off predicted")
all_plotted_three_point_predicted
combined <- ggarrange(all_plotted_fan_off,
all_plotted_fan_off_predicted,
all_plotted_three_point,
all_plotted_three_point_predicted,
nrow = 2,
ncol =2,
common.legend = TRUE,
legend= "bottom")
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
master <- read_excel("RES _LCMS_GC.xlsx", sheet=1)
master$Sensor <- as.factor(master$Sensor)
fan_off <- master %>%
select(-LCMS_ppm_hr_fan_on, -LCMS_ppm_hr_3point)  %>%
na.omit()
fan_on <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_3point)  %>%
na.omit()
three_point <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_fan_on)  %>%
na.omit()
str(master)
all_plotted_fan_off <-
ggplot(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(a) Fan off")
all_plotted_fan_off
summary(lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)) #coefficents are the same, y=mx+c and r2
lm_fan_off <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off$fan_off_predicted_ppm <- predict(lm_fan_off, fan_off)
all_plotted_fan_off_predicted <-
ggplot(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan off predicted")
all_plotted_fan_on <-
ggplot(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan on")
all_plotted_fan_on
summary(lm(GC_ppm_hr~LCMS_ppm_hr_fan_on, data =fan_on)) #coefficents are the same, y=mx+c and r2
all_plotted_three_point <-
ggplot(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(c) Three point")
all_plotted_three_point
summary(lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)) #coefficents are the same, y=mx+c and r2
lm_three_point <- lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)
three_point$three_point_predicted_ppm <- predict(lm_three_point, three_point)
all_plotted_three_point_predicted <-
ggplot(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan off predicted")
combined <- ggarrange(all_plotted_fan_off,
all_plotted_fan_off_predicted,
all_plotted_three_point,
all_plotted_three_point_predicted,
nrow = 2,
ncol =2,
common.legend = TRUE,
legend= "bottom")
ggsave(filename = "all_plotted.jpg",  # Include the file extension here
plot = combined,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 21, width = 20, units = "cm")
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
master <- read_excel("RES _LCMS_GC.xlsx", sheet=1)
master$Sensor <- as.factor(master$Sensor)
fan_off <- master %>%
select(-LCMS_ppm_hr_fan_on, -LCMS_ppm_hr_3point)  %>%
na.omit()
fan_on <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_3point)  %>%
na.omit()
three_point <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_fan_on)  %>%
na.omit()
str(master)
all_plotted_fan_off <-
ggplot(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(a) Fan off")
all_plotted_fan_off
summary(lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)) #coefficents are the same, y=mx+c and r2
lm_fan_off <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off$fan_off_predicted_ppm <- predict(lm_fan_off, fan_off)
all_plotted_fan_off_predicted <-
ggplot(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan off predicted")
all_plotted_fan_on <-
ggplot(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan on")
all_plotted_fan_on
summary(lm(GC_ppm_hr~LCMS_ppm_hr_fan_on, data =fan_on)) #coefficents are the same, y=mx+c and r2
all_plotted_three_point <-
ggplot(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(c) Three point")
all_plotted_three_point
summary(lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)) #coefficents are the same, y=mx+c and r2
lm_three_point <- lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)
three_point$three_point_predicted_ppm <- predict(lm_three_point, three_point)
all_plotted_three_point_predicted <-
ggplot(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(d) Three point predicted")
combined <- ggarrange(all_plotted_fan_off,
all_plotted_fan_off_predicted,
all_plotted_three_point,
all_plotted_three_point_predicted,
nrow = 2,
ncol =2,
common.legend = TRUE,
legend= "bottom")
ggsave(filename = "all_plotted.jpg",  # Include the file extension here
plot = combined,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 21, width = 20, units = "cm")
all_plotted_fan_on <-
ggplot(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("Fan on")+
theme(legend.position="bottom")
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
master <- read_excel("RES _LCMS_GC.xlsx", sheet=1)
master$Sensor <- as.factor(master$Sensor)
fan_off <- master %>%
select(-LCMS_ppm_hr_fan_on, -LCMS_ppm_hr_3point)  %>%
na.omit()
fan_on <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_3point)  %>%
na.omit()
three_point <- master %>%
select(-LCMS_ppm_hr, -LCMS_ppm_hr_fan_on)  %>%
na.omit()
str(master)
all_plotted_fan_off <-
ggplot(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_off, aes(x=LCMS_ppm_hr, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(a) Fan off")
all_plotted_fan_off
summary(lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)) #coefficents are the same, y=mx+c and r2
lm_fan_off <- lm(GC_ppm_hr~LCMS_ppm_hr, data =fan_off)
fan_off$fan_off_predicted_ppm <- predict(lm_fan_off, fan_off)
all_plotted_fan_off_predicted <-
ggplot(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=fan_off, aes(x=fan_off_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(b) Fan off predicted")
all_plotted_fan_on <-
ggplot(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=fan_on, aes(x=LCMS_ppm_hr_fan_on, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("Fan on")+
theme(legend.position="bottom")
all_plotted_fan_on
summary(lm(GC_ppm_hr~LCMS_ppm_hr_fan_on, data =fan_on)) #coefficents are the same, y=mx+c and r2
all_plotted_three_point <-
ggplot(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label =  paste(..rr.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 45)+
stat_regline_equation(aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr,
label = paste(..eq.label..)),
show.legend = FALSE,
label.x = 75,
label.y = 50)+
geom_smooth(data=three_point, aes(x=LCMS_ppm_hr_3point, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(c) Three point")
all_plotted_three_point
summary(lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)) #coefficents are the same, y=mx+c and r2
lm_three_point <- lm(GC_ppm_hr~LCMS_ppm_hr_3point, data =three_point)
three_point$three_point_predicted_ppm <- predict(lm_three_point, three_point)
all_plotted_three_point_predicted <-
ggplot(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr))+
geom_point(aes(color=Sensor))+
scale_x_continuous(limits = c(-0, 149), expand = c(0, 0))+
scale_y_continuous(limits = c(-0, 149), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1)+
geom_smooth(data=three_point, aes(x=three_point_predicted_ppm, y=GC_ppm_hr),method="lm", level = 0.95)+
ggtitle("(d) Three point predicted")
combined <- ggarrange(all_plotted_fan_off,
all_plotted_fan_off_predicted,
all_plotted_three_point,
all_plotted_three_point_predicted,
nrow = 2,
ncol =2,
common.legend = TRUE,
legend= "bottom")
ggsave(filename = "all_plotted.jpg",  # Include the file extension here
plot = combined,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 21, width = 20, units = "cm")
ggsave(filename = "fan_on.jpg",  # Include the file extension here
plot = all_plotted_fan_on,              # Specify the plot
#path = "D:/Academics/UC Davis/School Work/Linquist Lab/Data/R stats/Agronomic paper/Figures",
dpi = 400,
height = 21, width = 20, units = "cm")
